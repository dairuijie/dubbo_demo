<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/task
           http://www.springframework.org/schema/task/spring-task.xsd
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 扫描 有controller service 等有注解 -->
    <context:component-scan base-package="com.dairuijie.app.*"></context:component-scan>
    <!-- <context:annotation-config /> -->
    <!-- <aop:aspectj-autoproxy />有一个proxy-target-class属性，默认为false，表示使用jdk动态代理织入增强，
    	当配为<aop:aspectj-autoproxy  poxy-target-class="true"/>时，表示使用CGLib动态代理技术织入增强。
		即使proxy-target-class设置为false，如果目标类没有声明接口，则spring将自动使用CGLib动态代理。 -->
    <aop:aspectj-autoproxy proxy-target-class="true" />
    <!-- 异步和定时 -->
    <!-- <task:annotation-driven mode="aspectj"  executor="appExecutor" scheduler="appScheduler"/>
    <task:executor id="appExecutor" pool-size="100"/>
    <task:scheduler id="appScheduler" pool-size="10"/> -->
    <!-- 会自动注册RequestMappingHandlerMapping与RequestMappingHandlerAdapter两个Bean,这是Spring MVC为@Controller分发请求所必需的，并且提供了数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持,@Valid支持读写XML的支持（JAXB）和读写JSON的支持（默认Jackson）等功能。 -->
    <mvc:annotation-driven/>
     
     <!-- 获取配置服务参数获取对应文件  比如：本地、测试、正式 配置  -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/config/system-#{systemProperties['envTarget']}.properties
                </value>
            </list>
        </property>
    </bean>

    <import resource="interceptor.xml"/>
    <!-- <import resource="redis.xml"/> -->
    <import resource="datasource.xml"/>
    <import resource="transaction.xml"/>
    <import resource="dubbo-provider.xml"/>
</beans>
